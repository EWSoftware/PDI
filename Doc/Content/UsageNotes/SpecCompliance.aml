<?xml version="1.0" encoding="utf-8"?>
<topic id="ada69918-d59a-4340-8c77-28b9726a7205" revisionNumber="1">
	<developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

		<introduction>
			<para>To the best of my knowledge, all specifications are fully implemented except for the following noted
limitations.  The five specifications contain a large amount of information and it is possible that I may have
missed something.  If you do find something that is not implemented or is not correct, please let me know and I
will do my best to correct the problem.</para>
		</introduction>

		<section>
			<content>
				<definitionTable>
					<definedTerm>vCard 2.1 and vCard 3.0</definedTerm>
					<definition>
						<para>vCard object and vCard property group names are parsed and stored and are written back out when
saved.  However, full use of the grouping name as defined in the specifications is not supported.</para>

						<para>Inline binary encoded properties such as <codeInline>PHOTO</codeInline>, <codeInline>LOGO</codeInline>,
<codeInline>SOUND</codeInline>, and <codeInline>KEY</codeInline> give you access to a byte array that represents
the inline decoded binary data but it is up to you to convert the byte array into something more useful such as
an image, sound, digital certificate, file, etc.  The demo applications provide some examples of this.</para>
					</definition>

					<definedTerm>vCard 4.0</definedTerm>
					<definition>
						<para>Support for RFC 6350 is only partially implemented.  The following items are not supported.
They may be addressed in future releases as the need arises:</para>

						<list class="bullet">
							<listItem>
								<para>The <codeInline>ALTID</codeInline> and <codeInline>LANGUAGE</codeInline> parameters are not
supported.  The introduction of these parameters significantly changes the cardinality of many properties which
would require reimplementing both the vCard parser and the vCard object itself.  As such, these parameters will
be ignored and will be added to the custom parameter collection on any property on which they appear.  If
multiple vCard properties of the same type are encountered due to the use of these parameters, only the value
from the last property instance seen will be used.  If the vCard is subsequently saved, the other properties
instances of the same type will be lost.</para>
							</listItem>

							<listItem>
								<para>For similar reasons, the <codeInline>PREF</codeInline> and <codeInline>TYPE</codeInline>
parameters on the <codeInline>CATEGORIES</codeInline>, <codeInline>FN</codeInline>, <codeInline>GEO</codeInline>,
<codeInline>KEY</codeInline>, <codeInline>LOGO</codeInline>, <codeInline>NICKNAME</codeInline>,
<codeInline>ORG</codeInline>, <codeInline>PHOTO</codeInline>, <codeInline>ROLE</codeInline>, <codeInline>SOUND</codeInline>,
<codeInline>SOURCE</codeInline>, <codeInline>TITLE</codeInline>, <codeInline>TZ</codeInline>, and <codeInline>URL</codeInline>
properties are not supported either.  As above, these will pass through as custom properties and only the last
property instance seen will be used.</para>
							</listItem>

							<listItem>
								<para>The <codeInline>MEDIATYPE</codeInline> parameter is ignored on properties that support it.
It will be passed through in the custom parameters.</para>
							</listItem>

							<listItem>
								<para>The <codeInline>CALADRURI</codeInline>, <codeInline>CALURI</codeInline>, <codeInline>FBURL</codeInline>,
<codeInline>IMPP</codeInline>, <codeInline>LANG</codeInline>, and <codeInline>XML</codeInline> properties are not
handled.  These will be passed through in the custom properties collection.  Support will be added for these
later if there is a need for them.</para>
							</listItem>

						</list>

						<para>The vCard 4.0 specification states that inline vCard values such as on the
<codeInline>AGENT</codeInline> property are no longer supported and does not include any documentation for the
property at all.  However, since other non-inline types are valid in the prior specifications and the 4.0
specification does not address them at all, the	<codeInline>AGENT</codeInline> property will function as it did
in the prior specifications including support for inline vCard values.</para>
					</definition>
					
					<definedTerm>vCalendar 1.0 and iCalendar 2.0</definedTerm>
					<definition>
						<para>Recurrence rules in vCalendar 1.0 basic format are supported.  The vCalendar 1.0 extended
recurrence rule format is not supported.</para>

						<para>The vCalendar 1.0 <codeInline>RNUM</codeInline>, <codeInline>DAYLIGHT</codeInline>, and
<codeInline>TZ</codeInline> properties are parsed and stored in the calendar object and are written back out when
saved but they are not used for anything.  All iCalendar 2.0 recurrence and time zone properties are supported
and utilized though.</para>

						<para>Inline binary encoded properties such as <codeInline>ATTACH</codeInline> give you access to a
byte array that represents the inline decoded binary data but it is up to you to convert the byte array into
something more useful such as a file.  The demo applications provide some examples of this.</para>

						<para>All calendar-related objects are compatible with RFC 2446 (iCalendar Transport-Independent
Interoperability Protocol) and RFC 2447 (iCalendar Message-Based Interoperability Protocol) and implement all 
the necessary properties.  However, there is currently no support for validating objects against RFC 2446 rules.
Support for this may be considered at a later date.</para>
					</definition>

					<definedTerm>All specifications</definedTerm>
					<definition>
						<para>Custom properties (anything not recognized as part of one of the specifications) are stored in
a <codeInline>CustomProperties</codeInline> property on each object. It is up to you to search the collection for
custom properties that may be of interested to you.</para>

						<para>Custom parameters (anything not recognized as part of one of the specifications) are stored in
a <codeInline>CustomParameters</codeInline> string property on each property object.  It is up to you to parse
the string for custom parameters that may be of interest to you.</para>
					</definition>

				</definitionTable>

				<para>For more information and copies of the specifications, please refer to the <externalLink>
					<linkText>Internet Mail Consortium</linkText>
					<linkUri>http://www.imc.org/pdi/</linkUri>
					<linkTarget>_blank</linkTarget>
				</externalLink> web site or the <externalLink>
					<linkText>Internet Engineering Task Force</linkText>
					<linkUri>http://www.ietf.org/</linkUri>
					<linkTarget>_blank</linkTarget>
				</externalLink> web site.</para>
			</content>
		</section>

		<relatedTopics>
			<link xlink:href="695cc5b6-0937-42cd-9e7a-2f8aab4f09b0" />
		</relatedTopics>

	</developerConceptualDocument>
</topic>
