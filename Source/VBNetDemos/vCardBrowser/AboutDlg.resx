<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAABJ0AAASdAHeZh94AAAEpUlE
        QVRoQ+2Y308cVRiG+QO8MTGa2JgYY0xML2ziRW+oF3qFifWCxJBs40XBpjFIVi0qwVoriVq5qjRS+yMK
        ShNoLVUCtZZqbaW2aC1Q69bC2pouJaWLpbCgEMmnz2HPdObM7O6cCqEmc5I3DIeZ7PO+5/vOLKcoGtGI
        RjSiEQ1Gx7cDcuDrfkefHT6t1HqwV2lP50n5tOPEguvj/cdk195vHH3Q8pVPDc0Hfcpi3xxAz83NLYmm
        ZsWr6b8dpSfFI+aeffGd28OAD7wA/JXrs3IqMRZsgHIJ+pDFkg24hk+NzcnxcxPy1NqapTVwq/Do0I/X
        5PGyuN8AjRr0YSidTkt3d7fU1tZKLBaTyspK2bFjp/T3nw28P59ygQfBu8G1vugdl5Wr14UzkMlkpKen
        R8orKqS6uloaGhqkqblZwfM7Rtrb29V95rNB8sAbBsLAoz3fTQQbYEszPxA4IDe9uVlBA7+9sVGJOVYE
        MW8+ayoseD745KjIriM3whmgbICrq6tTRurr31PXJI8oJcQ1K/Rb8nfP81oe8P8Ib2WAlEtLS1XZaPB4
        VZUS4E+WlKi/UWL8jkn381pvtM3Iay1/ebThk2mJ77aXlQFSBRxxDSSG+En5AJ5KpVQjY5bVcj+vZaYe
        lHyh1NGFEZGfUxYGgNXwpA0gKQNN046PjanrE6d+UvPFq1bdBHZpIVfAygBJ08A1r9aolN3g9Ac6n0io
        7ZUm5l6fgTyp50reTF0nrxXagG5UVkEb0OBcA08ZkT73sEsFgQfB5yoZZJaMqdAGSBYDCFB2GcCHhoY8
        8DQy5YPJsMnnA8+VvFZoAyQNHL1AHwALNMZ02ZA68DR1mOQLwecDR6cvWRhApE3zsgqY4F2g3wfMA8+2
        2nd+MCd4/O0Dsm5jq09rNjRZqzdpaQDRtCTOagBLb2AAI5/v65QjH+2W1pdiqrxypR6mWXXKQQJcy8rA
        bLJPMvVVMnXyS5lu+1A6O7ucJmZ1BgbT6u/XN5bJKyvvk1+PHfXBL9kKzAwPKriZw62OAUBpYLZTBPBU
        yxZ138XYA/LyijsleeaMSrjQyylMvbuTRz0XLAwABTQG+KkNpMofVemzEsxx33j8MUk995B0ldyrymnk
        6uSiwFsZAFYbIGWkDfywZf38tpmdI32094m71Sqkhv9woBeyhKwMkKQ2oeucpCfXP6Jgv39/s5N8Ys39
        Kv2txfeoXrg8fMOXuk5ep2wqX+pube0K+f8Adb9v9XKVOKAaHmCECcCPP7PMgS97+K75HSkLvxgr8G7H
        dLABzmcUuPtt+m+JbHt6uQLUsJQJAtgt4El/5JezvtRtkjcT1zqamNfrbZPBBjhUcuBdJgDqa9ykVgNA
        arziwTs8Yo7kL10c9ZRNPnjAbeC7z82Lb7LhDGTfqmj02oQywrY5cKjdI+b4ngSoO3mkYU3ZwGtwrRea
        MiEMuODNF5O7vt2ygQ8Djkx4VL5zKtgAZ5Bu8CD4xXo5mXKXjKmCBvh6gDjC4xSMgyTOYjjOQOzDtyq2
        QFPsKm/t/1M1J/VNibgFsKmcBjhz5NiuuPR5ddPtrCx2NKIRjWhEIxr/51FU9A9Nc9lU34cCHgAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>