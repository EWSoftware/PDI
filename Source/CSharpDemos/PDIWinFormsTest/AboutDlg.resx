<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAABJzAAAScwGMIrkHAAAE9ElE
        QVRoQ+2Y/2tWVRzHR9APQdAfUNZPldAPIRQEzw9F4E8SQdIPYT8kidF+SDbsm6YQsswemtAqp2ZO7Ilw
        NkSbGy1tOL+NspZzaenyy9YW6kjYV/c826nXZ/tcznPuved5vGNIdA+8cOd+7j3n/T7ncz73uVakLW1p
        S1va0qbNjBjz6L0LA/KFcP+euxcEDI9NmQX3PRRA3Nf/pafLZDKZgPbWYyX79vPNR7rM/Q8+YGblhtv7
        2awZnZwOiOojSnH7q6pfMyM3RwPo/z0xHPD88uVF4y1d+U7J/pAxAdqflRtu/3kDn+y/biC752oRNbm/
        zLqGQWH11oFIKuv+FF6u7TcvbgqzdEOfsGTdlRCL375snn6zNE++fsksqjwbbwCxP142IX7qzZuO89NC
        W/dUiIM/501j57TJHc2bne0FU//tZBGbv7kp1OydENbmxoqo+ny0bBa+dNJvwBarHP11MiTWxhWuguOE
        RwkrF68BUiUOXwrdavqQMjaZ6guSGuXgNUCZsg+ly+5D/ZHXlbg4B3JoeMob/32gYHa0XjR9Q/kQF6/n
        JZV5noM8Kzfc5moAAVHXEYiQjw/8ERsndWsbz4TEAwaIf/T12fkzwEttPg1wFudkgElKpYjPACLiDGDe
        Z4D0wgDxxAaYZFtzvAAmijNA3GcA81S6OAM9/QWpgDW7T/kNNB06EzlBqRSQSfrGzQdfnRaxCsIA8YhA
        AH03zgoj8N0dx+ReFc51Fb/nxLhZW3/YLF5WHW/giwMnQ+KYaPBG4d/BxmWFNF2A60z0Q++ooAIVWwSs
        3z4jEPQ61YX04P2CQFJJ4bqK3/7dDVP14UGTea7Sb4A8h4a2GUgbVh7x2dwpuUaqbGu5VBRDPALd5zh4
        Gs/XVZmxt54NMfLCw8K1p+6ScXlOx4UNOzvF3KrsfvPYkhW3tgOgqx53iNklVpu4pocLccTyrwu70dU7
        brofvzPYLRd2hPETGQCfAT0jcQY0neIM6BnxGfj+nJHdmJMBtjcqhkiEzKcBzkJiA4jgwPrKKCI4G7Zw
        5bYbUAEcrLg4eYxB/p4PA1SpxAaYhEGoJOR7VJxySJy/EWyDQOIYcIUB5ZIcxwD32Wgp/fL4zHvAa+Cz
        xnYRZE/MBFSAE7+NyYsGgay2Xd+1ZlNG6fOcDUIQQankPhdirHDrI3fIG1nR64jX90BJA3Yd1lrMyiKe
        FSCutV1jWqffqGsrelbhHmLUeVY5CsQD9+vYG3Nd8ixjI/7V9/aWtwOkiQu5TJXR3eFQK5pixO2dUdgB
        reNuTOPsBHH768+GnSBelgGXKAM2GCBV1ICLGmB1fQaII9ZOIzuV+K2VyIBWk7kYQCCpl9QA396csUQG
        VGhSA3rI4wwQRyTxOAMcZM5RIgNaeZIaQLwKjDJAvKlzRA5ulAHShypU8sfcp7m20OEFfusf7xmWCRDr
        gghWkarhitPV5ScxKUDfvYc4AtdsOSJ/806wYfVr9w2WrkIYINepLKwog/M7/3D3hGnuHJByxnUXVpBV
        YovJZz20uv2sbn3LNSmF9LlfoS8Cm65InFxnLOD/m1T8+l095Rno6L4qYvk629VyTrad74BNDR1iQOs0
        q039Z1URzuRsscb1/cCqagwBdhx4v+g9blzH1mfhiWdW+g28sqZW4NtT4TOOLyFgBW43s3LTlra0pS1t
        //tWUfEPhwO2u+m+HTUAAAAASUVORK5CYII=
</value>
  </data>
</root>